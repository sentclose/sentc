/* tslint:disable */
/* eslint-disable */
/* prettier-ignore */

/* auto-generated by NAPI-RS */

const { existsSync, readFileSync } = require('fs')
const { join } = require('path')

const { platform, arch } = process

let nativeBinding = null
let localFileExisted = false
let loadError = null

function isMusl() {
  // For Node 10
  if (!process.report || typeof process.report.getReport !== 'function') {
    try {
      const lddPath = require('child_process').execSync('which ldd').toString().trim()
      return readFileSync(lddPath, 'utf8').includes('musl')
    } catch (e) {
      return true
    }
  } else {
    const { glibcVersionRuntime } = process.report.getReport().header
    return !glibcVersionRuntime
  }
}

switch (platform) {
  case 'android':
    switch (arch) {
      case 'arm64':
        localFileExisted = existsSync(join(__dirname, 'sentc_node_js.android-arm64.node'))
        try {
          if (localFileExisted) {
            nativeBinding = require('./sentc_node_js.android-arm64.node')
          } else {
            nativeBinding = require('@sentclose/sentc_node_js-android-arm64')
          }
        } catch (e) {
          loadError = e
        }
        break
      case 'arm':
        localFileExisted = existsSync(join(__dirname, 'sentc_node_js.android-arm-eabi.node'))
        try {
          if (localFileExisted) {
            nativeBinding = require('./sentc_node_js.android-arm-eabi.node')
          } else {
            nativeBinding = require('@sentclose/sentc_node_js-android-arm-eabi')
          }
        } catch (e) {
          loadError = e
        }
        break
      default:
        throw new Error(`Unsupported architecture on Android ${arch}`)
    }
    break
  case 'win32':
    switch (arch) {
      case 'x64':
        localFileExisted = existsSync(
          join(__dirname, 'sentc_node_js.win32-x64-msvc.node')
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./sentc_node_js.win32-x64-msvc.node')
          } else {
            nativeBinding = require('@sentclose/sentc_node_js-win32-x64-msvc')
          }
        } catch (e) {
          loadError = e
        }
        break
      case 'ia32':
        localFileExisted = existsSync(
          join(__dirname, 'sentc_node_js.win32-ia32-msvc.node')
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./sentc_node_js.win32-ia32-msvc.node')
          } else {
            nativeBinding = require('@sentclose/sentc_node_js-win32-ia32-msvc')
          }
        } catch (e) {
          loadError = e
        }
        break
      case 'arm64':
        localFileExisted = existsSync(
          join(__dirname, 'sentc_node_js.win32-arm64-msvc.node')
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./sentc_node_js.win32-arm64-msvc.node')
          } else {
            nativeBinding = require('@sentclose/sentc_node_js-win32-arm64-msvc')
          }
        } catch (e) {
          loadError = e
        }
        break
      default:
        throw new Error(`Unsupported architecture on Windows: ${arch}`)
    }
    break
  case 'darwin':
    localFileExisted = existsSync(join(__dirname, 'sentc_node_js.darwin-universal.node'))
    try {
      if (localFileExisted) {
        nativeBinding = require('./sentc_node_js.darwin-universal.node')
      } else {
        nativeBinding = require('@sentclose/sentc_node_js-darwin-universal')
      }
      break
    } catch {}
    switch (arch) {
      case 'x64':
        localFileExisted = existsSync(join(__dirname, 'sentc_node_js.darwin-x64.node'))
        try {
          if (localFileExisted) {
            nativeBinding = require('./sentc_node_js.darwin-x64.node')
          } else {
            nativeBinding = require('@sentclose/sentc_node_js-darwin-x64')
          }
        } catch (e) {
          loadError = e
        }
        break
      case 'arm64':
        localFileExisted = existsSync(
          join(__dirname, 'sentc_node_js.darwin-arm64.node')
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./sentc_node_js.darwin-arm64.node')
          } else {
            nativeBinding = require('@sentclose/sentc_node_js-darwin-arm64')
          }
        } catch (e) {
          loadError = e
        }
        break
      default:
        throw new Error(`Unsupported architecture on macOS: ${arch}`)
    }
    break
  case 'freebsd':
    if (arch !== 'x64') {
      throw new Error(`Unsupported architecture on FreeBSD: ${arch}`)
    }
    localFileExisted = existsSync(join(__dirname, 'sentc_node_js.freebsd-x64.node'))
    try {
      if (localFileExisted) {
        nativeBinding = require('./sentc_node_js.freebsd-x64.node')
      } else {
        nativeBinding = require('@sentclose/sentc_node_js-freebsd-x64')
      }
    } catch (e) {
      loadError = e
    }
    break
  case 'linux':
    switch (arch) {
      case 'x64':
        if (isMusl()) {
          localFileExisted = existsSync(
            join(__dirname, 'sentc_node_js.linux-x64-musl.node')
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./sentc_node_js.linux-x64-musl.node')
            } else {
              nativeBinding = require('@sentclose/sentc_node_js-linux-x64-musl')
            }
          } catch (e) {
            loadError = e
          }
        } else {
          localFileExisted = existsSync(
            join(__dirname, 'sentc_node_js.linux-x64-gnu.node')
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./sentc_node_js.linux-x64-gnu.node')
            } else {
              nativeBinding = require('@sentclose/sentc_node_js-linux-x64-gnu')
            }
          } catch (e) {
            loadError = e
          }
        }
        break
      case 'arm64':
        if (isMusl()) {
          localFileExisted = existsSync(
            join(__dirname, 'sentc_node_js.linux-arm64-musl.node')
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./sentc_node_js.linux-arm64-musl.node')
            } else {
              nativeBinding = require('@sentclose/sentc_node_js-linux-arm64-musl')
            }
          } catch (e) {
            loadError = e
          }
        } else {
          localFileExisted = existsSync(
            join(__dirname, 'sentc_node_js.linux-arm64-gnu.node')
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./sentc_node_js.linux-arm64-gnu.node')
            } else {
              nativeBinding = require('@sentclose/sentc_node_js-linux-arm64-gnu')
            }
          } catch (e) {
            loadError = e
          }
        }
        break
      case 'arm':
        if (isMusl()) {
          localFileExisted = existsSync(
            join(__dirname, 'sentc_node_js.linux-arm-musleabihf.node')
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./sentc_node_js.linux-arm-musleabihf.node')
            } else {
              nativeBinding = require('@sentclose/sentc_node_js-linux-arm-musleabihf')
            }
          } catch (e) {
            loadError = e
          }
        } else {
          localFileExisted = existsSync(
            join(__dirname, 'sentc_node_js.linux-arm-gnueabihf.node')
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./sentc_node_js.linux-arm-gnueabihf.node')
            } else {
              nativeBinding = require('@sentclose/sentc_node_js-linux-arm-gnueabihf')
            }
          } catch (e) {
            loadError = e
          }
        }
        break
      case 'riscv64':
        if (isMusl()) {
          localFileExisted = existsSync(
            join(__dirname, 'sentc_node_js.linux-riscv64-musl.node')
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./sentc_node_js.linux-riscv64-musl.node')
            } else {
              nativeBinding = require('@sentclose/sentc_node_js-linux-riscv64-musl')
            }
          } catch (e) {
            loadError = e
          }
        } else {
          localFileExisted = existsSync(
            join(__dirname, 'sentc_node_js.linux-riscv64-gnu.node')
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./sentc_node_js.linux-riscv64-gnu.node')
            } else {
              nativeBinding = require('@sentclose/sentc_node_js-linux-riscv64-gnu')
            }
          } catch (e) {
            loadError = e
          }
        }
        break
      case 's390x':
        localFileExisted = existsSync(
          join(__dirname, 'sentc_node_js.linux-s390x-gnu.node')
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./sentc_node_js.linux-s390x-gnu.node')
          } else {
            nativeBinding = require('@sentclose/sentc_node_js-linux-s390x-gnu')
          }
        } catch (e) {
          loadError = e
        }
        break
      default:
        throw new Error(`Unsupported architecture on Linux: ${arch}`)
    }
    break
  default:
    throw new Error(`Unsupported OS: ${platform}, architecture: ${arch}`)
}

if (!nativeBinding) {
  if (loadError) {
    throw loadError
  }
  throw new Error(`Failed to load native binding`)
}

const { splitHeadAndEncryptedData, splitHeadAndEncryptedString, deserializeHeadFromString, encryptRawSymmetric, decryptRawSymmetric, encryptSymmetric, decryptSymmetric, encryptStringSymmetric, decryptStringSymmetric, encryptRawAsymmetric, decryptRawAsymmetric, encryptAsymmetric, decryptAsymmetric, encryptStringAsymmetric, decryptStringAsymmetric, generateNonRegisterSymKey, generateNonRegisterSymKeyByPublicKey, decryptSymKey, decryptSymKeyByPrivateKey, doneFetchSymKey, doneFetchSymKeyByPrivateKey, createSearchableRaw, createSearchable, search, sortableEncryptRawNumber, sortableEncryptNumber, sortableEncryptRawString, sortableEncryptString, BelongsToType, fileDownloadFileMeta, fileDownloadAndDecryptFilePartStart, fileDownloadAndDecryptFilePart, fileDownloadPartList, fileRegisterFile, filePrepareRegisterFile, fileDoneRegisterFile, fileUploadPartStart, fileUploadPart, fileFileNameUpdate, fileDeleteFile, groupPrepareCreateGroup, groupCreateGroup, groupCreateChildGroup, groupCreateConnectedGroup, groupExtractGroupData, groupExtractGroupKeys, groupGetGroupData, groupGetGroupKeys, groupGetGroupKey, groupDecryptKey, groupDecryptHmacKey, groupDecryptSortableKey, groupGetMember, groupGetGroupUpdates, groupGetAllFirstLevelChildren, groupGetGroupsForUser, groupPrepareKeysForNewMember, groupInviteUser, groupInviteUserSession, groupGetInvitesForUser, groupAcceptInvite, groupRejectInvite, groupGetSentJoinReqUser, groupGetSentJoinReq, groupDeleteSentJoinReqUser, groupDeleteSentJoinReq, groupJoinReq, groupGetJoinReqs, groupRejectJoinReq, groupAcceptJoinReq, groupJoinUserSession, groupStopGroupInvites, leaveGroup, groupPrepareKeyRotation, groupDoneKeyRotation, groupKeyRotation, groupPreDoneKeyRotation, groupGetDoneKeyRotationServerInput, groupFinishKeyRotation, groupPrepareUpdateRank, groupUpdateRank, groupKickUser, groupDeleteGroup, groupGetPublicKeyData, decodeJwt, checkUserIdentifierAvailable, prepareCheckUserIdentifierAvailable, doneCheckUserIdentifierAvailable, generateUserRegisterData, prepareRegister, doneRegister, register, prepareRegisterDeviceStart, doneRegisterDeviceStart, registerDeviceStart, prepareRegisterDevice, registerDevice, userDeviceKeySessionUpload, login, mfaLogin, doneFetchUserKey, fetchUserKey, getFreshJwt, refreshJwt, initUser, userCreateSafetyNumber, userVerifyUserPublicKey, getUserDevices, resetPassword, changePassword, deleteUser, deleteDevice, updateUser, userFetchPublicKey, userFetchVerifyKey, userKeyRotation, userPreDoneKeyRotation, userGetDoneKeyRotationServerInput, userFinishKeyRotation, registerRawOtp, registerOtp, getOtpRecoverKeys, resetRawOtp, resetOtp, disableOtp } = nativeBinding

module.exports.splitHeadAndEncryptedData = splitHeadAndEncryptedData
module.exports.splitHeadAndEncryptedString = splitHeadAndEncryptedString
module.exports.deserializeHeadFromString = deserializeHeadFromString
module.exports.encryptRawSymmetric = encryptRawSymmetric
module.exports.decryptRawSymmetric = decryptRawSymmetric
module.exports.encryptSymmetric = encryptSymmetric
module.exports.decryptSymmetric = decryptSymmetric
module.exports.encryptStringSymmetric = encryptStringSymmetric
module.exports.decryptStringSymmetric = decryptStringSymmetric
module.exports.encryptRawAsymmetric = encryptRawAsymmetric
module.exports.decryptRawAsymmetric = decryptRawAsymmetric
module.exports.encryptAsymmetric = encryptAsymmetric
module.exports.decryptAsymmetric = decryptAsymmetric
module.exports.encryptStringAsymmetric = encryptStringAsymmetric
module.exports.decryptStringAsymmetric = decryptStringAsymmetric
module.exports.generateNonRegisterSymKey = generateNonRegisterSymKey
module.exports.generateNonRegisterSymKeyByPublicKey = generateNonRegisterSymKeyByPublicKey
module.exports.decryptSymKey = decryptSymKey
module.exports.decryptSymKeyByPrivateKey = decryptSymKeyByPrivateKey
module.exports.doneFetchSymKey = doneFetchSymKey
module.exports.doneFetchSymKeyByPrivateKey = doneFetchSymKeyByPrivateKey
module.exports.createSearchableRaw = createSearchableRaw
module.exports.createSearchable = createSearchable
module.exports.search = search
module.exports.sortableEncryptRawNumber = sortableEncryptRawNumber
module.exports.sortableEncryptNumber = sortableEncryptNumber
module.exports.sortableEncryptRawString = sortableEncryptRawString
module.exports.sortableEncryptString = sortableEncryptString
module.exports.BelongsToType = BelongsToType
module.exports.fileDownloadFileMeta = fileDownloadFileMeta
module.exports.fileDownloadAndDecryptFilePartStart = fileDownloadAndDecryptFilePartStart
module.exports.fileDownloadAndDecryptFilePart = fileDownloadAndDecryptFilePart
module.exports.fileDownloadPartList = fileDownloadPartList
module.exports.fileRegisterFile = fileRegisterFile
module.exports.filePrepareRegisterFile = filePrepareRegisterFile
module.exports.fileDoneRegisterFile = fileDoneRegisterFile
module.exports.fileUploadPartStart = fileUploadPartStart
module.exports.fileUploadPart = fileUploadPart
module.exports.fileFileNameUpdate = fileFileNameUpdate
module.exports.fileDeleteFile = fileDeleteFile
module.exports.groupPrepareCreateGroup = groupPrepareCreateGroup
module.exports.groupCreateGroup = groupCreateGroup
module.exports.groupCreateChildGroup = groupCreateChildGroup
module.exports.groupCreateConnectedGroup = groupCreateConnectedGroup
module.exports.groupExtractGroupData = groupExtractGroupData
module.exports.groupExtractGroupKeys = groupExtractGroupKeys
module.exports.groupGetGroupData = groupGetGroupData
module.exports.groupGetGroupKeys = groupGetGroupKeys
module.exports.groupGetGroupKey = groupGetGroupKey
module.exports.groupDecryptKey = groupDecryptKey
module.exports.groupDecryptHmacKey = groupDecryptHmacKey
module.exports.groupDecryptSortableKey = groupDecryptSortableKey
module.exports.groupGetMember = groupGetMember
module.exports.groupGetGroupUpdates = groupGetGroupUpdates
module.exports.groupGetAllFirstLevelChildren = groupGetAllFirstLevelChildren
module.exports.groupGetGroupsForUser = groupGetGroupsForUser
module.exports.groupPrepareKeysForNewMember = groupPrepareKeysForNewMember
module.exports.groupInviteUser = groupInviteUser
module.exports.groupInviteUserSession = groupInviteUserSession
module.exports.groupGetInvitesForUser = groupGetInvitesForUser
module.exports.groupAcceptInvite = groupAcceptInvite
module.exports.groupRejectInvite = groupRejectInvite
module.exports.groupGetSentJoinReqUser = groupGetSentJoinReqUser
module.exports.groupGetSentJoinReq = groupGetSentJoinReq
module.exports.groupDeleteSentJoinReqUser = groupDeleteSentJoinReqUser
module.exports.groupDeleteSentJoinReq = groupDeleteSentJoinReq
module.exports.groupJoinReq = groupJoinReq
module.exports.groupGetJoinReqs = groupGetJoinReqs
module.exports.groupRejectJoinReq = groupRejectJoinReq
module.exports.groupAcceptJoinReq = groupAcceptJoinReq
module.exports.groupJoinUserSession = groupJoinUserSession
module.exports.groupStopGroupInvites = groupStopGroupInvites
module.exports.leaveGroup = leaveGroup
module.exports.groupPrepareKeyRotation = groupPrepareKeyRotation
module.exports.groupDoneKeyRotation = groupDoneKeyRotation
module.exports.groupKeyRotation = groupKeyRotation
module.exports.groupPreDoneKeyRotation = groupPreDoneKeyRotation
module.exports.groupGetDoneKeyRotationServerInput = groupGetDoneKeyRotationServerInput
module.exports.groupFinishKeyRotation = groupFinishKeyRotation
module.exports.groupPrepareUpdateRank = groupPrepareUpdateRank
module.exports.groupUpdateRank = groupUpdateRank
module.exports.groupKickUser = groupKickUser
module.exports.groupDeleteGroup = groupDeleteGroup
module.exports.groupGetPublicKeyData = groupGetPublicKeyData
module.exports.decodeJwt = decodeJwt
module.exports.checkUserIdentifierAvailable = checkUserIdentifierAvailable
module.exports.prepareCheckUserIdentifierAvailable = prepareCheckUserIdentifierAvailable
module.exports.doneCheckUserIdentifierAvailable = doneCheckUserIdentifierAvailable
module.exports.generateUserRegisterData = generateUserRegisterData
module.exports.prepareRegister = prepareRegister
module.exports.doneRegister = doneRegister
module.exports.register = register
module.exports.prepareRegisterDeviceStart = prepareRegisterDeviceStart
module.exports.doneRegisterDeviceStart = doneRegisterDeviceStart
module.exports.registerDeviceStart = registerDeviceStart
module.exports.prepareRegisterDevice = prepareRegisterDevice
module.exports.registerDevice = registerDevice
module.exports.userDeviceKeySessionUpload = userDeviceKeySessionUpload
module.exports.login = login
module.exports.mfaLogin = mfaLogin
module.exports.doneFetchUserKey = doneFetchUserKey
module.exports.fetchUserKey = fetchUserKey
module.exports.getFreshJwt = getFreshJwt
module.exports.refreshJwt = refreshJwt
module.exports.initUser = initUser
module.exports.userCreateSafetyNumber = userCreateSafetyNumber
module.exports.userVerifyUserPublicKey = userVerifyUserPublicKey
module.exports.getUserDevices = getUserDevices
module.exports.resetPassword = resetPassword
module.exports.changePassword = changePassword
module.exports.deleteUser = deleteUser
module.exports.deleteDevice = deleteDevice
module.exports.updateUser = updateUser
module.exports.userFetchPublicKey = userFetchPublicKey
module.exports.userFetchVerifyKey = userFetchVerifyKey
module.exports.userKeyRotation = userKeyRotation
module.exports.userPreDoneKeyRotation = userPreDoneKeyRotation
module.exports.userGetDoneKeyRotationServerInput = userGetDoneKeyRotationServerInput
module.exports.userFinishKeyRotation = userFinishKeyRotation
module.exports.registerRawOtp = registerRawOtp
module.exports.registerOtp = registerOtp
module.exports.getOtpRecoverKeys = getOtpRecoverKeys
module.exports.resetRawOtp = resetRawOtp
module.exports.resetOtp = resetOtp
module.exports.disableOtp = disableOtp
